k8s_clustername: MyK8sCluster
os_admin_username: groot
k8s_nic_name: "ansible_enp0s3"
KUBERNETES_MAIN_IP_ADDRESS: "192.168.56.101"
KUBERNETES_IP_ADDRESS: 
 - "DNS:127.0.0.1"
 - "DNS:10.32.0.1"
 - "DNS:192.168.56.200"
 - "DNS:192.168.56.101"
 - "DNS:192.168.56.102"

KUBERNETES_HOSTNAMES:
  - DNS:kubernetes
  - DNS:kubernetes.default
  - DNS:kubernetes.default.svc
  - DNS:kubernetes.default.svc.cluster
  - DNS:kubernetes.svc.clus

DOWNLOADS:
  masters:
    etcd:
      url: "https://github.com/etcd-io/etcd/releases/download/v3.5.5/etcd-v3.5.5-linux-amd64.tar.gz"
      filename: "etcd-v3.5.5-linux-amd64.tar.gz"
    kube-apiserver:
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-apiserver" 
      filename: "kube-apiserver"
    kube-controller-manager:
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-controller-manager"
      filename: "kube-controller-manager"
    kube-scheduler:
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-scheduler"
      filename: "kube-scheduler"
    kubectl:
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"
      filename: "kubectl"
  workers:  
    cri_tools:
      url:  "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz"
      filename: "crictl-v1.21.0-linux-amd64.tar.gz"
    runc:
      url: "https://github.com/opencontainers/runc/releases/download/v1.0.0-rc93/runc.amd64"
      filename: "runc"
    cni_plugins:
      url: "https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz"
      filename: "cni-plugins-linux-amd64-v0.9.1.tgz"
    containerd:
      url: "https://github.com/containerd/containerd/releases/download/v1.4.4/containerd-1.4.4-linux-amd64.tar.gz"
      filename: "containerd-1.4.4-linux-amd64.tar.gz"
    kube_proxy:
      url:  "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-proxy"
      filename: "kube-proxy"
    kubelet: 
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet"
      filename: "kubelet"
    kubectl: 
      url: "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"
      filename: "kubectl"
    # runc is a CLI tool for spawning and running containers on Linux according to the OCI specification.
    # CLI and validation tools for Kubelet Container Runtime Interface (CRI)

k8s_hosts:
  masters:
    - k8s-master01
    - k8s-master02    
  workers:
    - k8s-worker01
    - k8s-worker02
k8s_roles:
  main:
    - ca
    - ca-key
    - api-server
    - api-server-key
    - service-account
    - service-account-key
  control:
    - kube-controller-manager:
        cert_https_endpoint: "127.0.0.1"
        user: system:kube-controller-manager
    - kube-scheduler:
        cert_https_endpoint: "127.0.0.1"
        user: system:kube-scheduler
    - admin:
        cert_https_endpoint: "127.0.0.1"
        user: admin
#kubeconfig_info:
kubelet_host_key_varname: "{{ inventory_hostname | replace('-','_') }}_key"
kubeconfigs:
  kubelet:
    cert_https_endpoint: "{{ KUBERNETES_MAIN_IP_ADDRESS }}"
    kube_user_id: "{{ inventory_hostname }}"
    user: "system:node:{{ inventory_hostname }}"
    key_data: "{{ vars[kubelet_host_key_varname] | default([]) }}" 
  kube_proxy:
    cert_https_endpoint: "{{ KUBERNETES_MAIN_IP_ADDRESS }}"
    kube_user_id: kube-proxy
    user: system:kube-proxy  
    key_data: "{{ kube_proxy_key | default([]) }}" 
  kube_controller_manager:
    cert_https_endpoint: "127.0.0.1"
    kube_user_id: kube-controller-manager
    user: system:kube-controller-manager
    key_data: "{{ kube_controller_manager_key | default([]) }}"
  kube_scheduler:
    cert_https_endpoint: "127.0.0.1"
    kube_user_id: kube-scheduler
    user: system:kube-scheduler
    key_data: "{{ kube_scheduler_key | default([]) }}"
  admin:
    cert_https_endpoint: "127.0.0.1"
    kube_user_id: admin
    user: admin
    key_data: "{{ admin_key | default([]) }}"

service_cluster_ip_range: "10.32.0.0/24"
service_node_port_range: "30000-32767"
cluster_cidr: "10.200.0.0/16"